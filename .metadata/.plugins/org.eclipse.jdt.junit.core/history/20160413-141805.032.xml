<?xml version="1.0" encoding="UTF-8"?><testrun name="test" project="Hantothhughes" tests="173" started="173" failures="0" errors="10" ignored="0">
  <testsuite name="hanto.teststudentthhughes.beta.BetaHantoMasterTest" time="0.0">
    <testcase name="redAndBlueWinResultingInDraw" classname="hanto.teststudentthhughes.beta.BetaHantoMasterTest" time="0.0"/>
    <testcase name="tryingToMakeAMoveAfterADraw" classname="hanto.teststudentthhughes.beta.BetaHantoMasterTest" time="0.0"/>
    <testcase name="redTriesToPlaceDove" classname="hanto.teststudentthhughes.beta.BetaHantoMasterTest" time="0.0"/>
    <testcase name="blueWinsGameOnTwelfthMove" classname="hanto.teststudentthhughes.beta.BetaHantoMasterTest" time="0.0"/>
    <testcase name="blueTriesToPlacePieceWithNullLocation" classname="hanto.teststudentthhughes.beta.BetaHantoMasterTest" time="0.0"/>
    <testcase name="bluePlacesInitialSparrowAtOrigin" classname="hanto.teststudentthhughes.beta.BetaHantoMasterTest" time="0.0"/>
    <testcase name="redWinsGameOnTwelfthMove" classname="hanto.teststudentthhughes.beta.BetaHantoMasterTest" time="0.0"/>
    <testcase name="gameEndsInDrawAfterTwelveMoves" classname="hanto.teststudentthhughes.beta.BetaHantoMasterTest" time="0.0"/>
    <testcase name="redTriesToPlaceDoveOnFourthTurn" classname="hanto.teststudentthhughes.beta.BetaHantoMasterTest" time="0.0"/>
    <testcase name="blueLosesInSevenTurns" classname="hanto.teststudentthhughes.beta.BetaHantoMasterTest" time="0.0"/>
    <testcase name="redMakesinValidMoveAfterBluePlacesButterfly" classname="hanto.teststudentthhughes.beta.BetaHantoMasterTest" time="0.0"/>
    <testcase name="redTriesToPlaceSparrowOnFourthTurn" classname="hanto.teststudentthhughes.beta.BetaHantoMasterTest" time="0.0"/>
    <testcase name="blueTriesToPlayTwoButterflies" classname="hanto.teststudentthhughes.beta.BetaHantoMasterTest" time="0.0"/>
    <testcase name="bluePlacesInitialSparrowAtIllegalLocation" classname="hanto.teststudentthhughes.beta.BetaHantoMasterTest" time="0.0"/>
    <testcase name="usingGameFactoryToMakeAGameOfSpecificIDAndNoColorPref" classname="hanto.teststudentthhughes.beta.BetaHantoMasterTest" time="0.0"/>
    <testcase name="redTriesToPlayTwoButterflies" classname="hanto.teststudentthhughes.beta.BetaHantoMasterTest" time="0.0"/>
    <testcase name="blueMakesValidSecondMovePlacesSparrowSparrow" classname="hanto.teststudentthhughes.beta.BetaHantoMasterTest" time="0.0"/>
    <testcase name="makingSureBoardPrintoutReturnsEvenThoughNotUsed" classname="hanto.teststudentthhughes.beta.BetaHantoMasterTest" time="0.0"/>
    <testcase name="blueTriesToMoveSparrow" classname="hanto.teststudentthhughes.beta.BetaHantoMasterTest" time="0.0"/>
    <testcase name="blueTriesToPlaceButterflyOnFourthTurn" classname="hanto.teststudentthhughes.beta.BetaHantoMasterTest" time="0.0"/>
    <testcase name="blueTriesToPlaceSparrowOnFourthTurn" classname="hanto.teststudentthhughes.beta.BetaHantoMasterTest" time="0.0"/>
    <testcase name="redMakesValidMoveAfterBluePlacesButterfly" classname="hanto.teststudentthhughes.beta.BetaHantoMasterTest" time="0.0"/>
    <testcase name="redLosesInEightTurns" classname="hanto.teststudentthhughes.beta.BetaHantoMasterTest" time="0.0"/>
    <testcase name="tryToGetPieceFromInvalidPlace" classname="hanto.teststudentthhughes.beta.BetaHantoMasterTest" time="0.0"/>
    <testcase name="bluePlacesInitialButterflyAtOrigin" classname="hanto.teststudentthhughes.beta.BetaHantoMasterTest" time="0.0"/>
  </testsuite>
  <testsuite name="hanto.teststudentthhughes.common.movecalculator.SinglMoveTest" time="0.0">
    <testcase name="sampleSinglePointInList" classname="hanto.teststudentthhughes.common.movecalculator.SinglMoveTest" time="0.0"/>
    <testcase name="testSixResponsesFromSingleMoveCalculator" classname="hanto.teststudentthhughes.common.movecalculator.SinglMoveTest" time="0.0"/>
    <testcase name="testNotNull" classname="hanto.teststudentthhughes.common.movecalculator.SinglMoveTest" time="0.0"/>
  </testsuite>
  <testsuite name="hanto.teststudentthhughes.common.frontier.FrontierImplTest" time="0.0">
    <testcase name="removeNothingFromFrontier" classname="hanto.teststudentthhughes.common.frontier.FrontierImplTest" time="0.0"/>
    <testcase name="RemoveACoordinateFromTheFrontier" classname="hanto.teststudentthhughes.common.frontier.FrontierImplTest" time="0.0"/>
    <testcase name="addSomethingToFrontierThatsAlreadythere" classname="hanto.teststudentthhughes.common.frontier.FrontierImplTest" time="0.0"/>
    <testcase name="testCheckingANullCoordinateIsInTheFrontier" classname="hanto.teststudentthhughes.common.frontier.FrontierImplTest" time="0.0"/>
    <testcase name="addNothingToTheFrontier" classname="hanto.teststudentthhughes.common.frontier.FrontierImplTest" time="0.0"/>
    <testcase name="addSomethingToFrontier" classname="hanto.teststudentthhughes.common.frontier.FrontierImplTest" time="0.0"/>
    <testcase name="removeSomethingThatsNotInFrontier" classname="hanto.teststudentthhughes.common.frontier.FrontierImplTest" time="0.0"/>
    <testcase name="checkIfACoordinateIsIntheFrontier" classname="hanto.teststudentthhughes.common.frontier.FrontierImplTest" time="0.0"/>
  </testsuite>
  <testsuite name="hanto.teststudentthhughes.common.movevalidator.FristMoveValidatorTest" time="0.0">
    <testcase name="testPlacingButterflyAtCenter" classname="hanto.teststudentthhughes.common.movevalidator.FristMoveValidatorTest" time="0.0"/>
    <testcase name="testPlacingSparrowflyAtCenter" classname="hanto.teststudentthhughes.common.movevalidator.FristMoveValidatorTest" time="0.0"/>
    <testcase name="testInvalidError" classname="hanto.teststudentthhughes.common.movevalidator.FristMoveValidatorTest" time="0.0"/>
    <testcase name="testPlacingSparrowflyAtNotCenter" classname="hanto.teststudentthhughes.common.movevalidator.FristMoveValidatorTest" time="0.0"/>
    <testcase name="testNotNull" classname="hanto.teststudentthhughes.common.movevalidator.FristMoveValidatorTest" time="0.0"/>
  </testsuite>
  <testsuite name="hanto.teststudentthhughes.common.movevalidator.LimitMoveLengthToOneValidatorTest" time="0.0">
    <testcase name="movePieceTwoLength" classname="hanto.teststudentthhughes.common.movevalidator.LimitMoveLengthToOneValidatorTest" time="0.0"/>
    <testcase name="placePieceNoMove" classname="hanto.teststudentthhughes.common.movevalidator.LimitMoveLengthToOneValidatorTest" time="0.0"/>
    <testcase name="movePieceOneLength" classname="hanto.teststudentthhughes.common.movevalidator.LimitMoveLengthToOneValidatorTest" time="0.0"/>
    <testcase name="testInvalidError" classname="hanto.teststudentthhughes.common.movevalidator.LimitMoveLengthToOneValidatorTest" time="0.0"/>
    <testcase name="testNotNull" classname="hanto.teststudentthhughes.common.movevalidator.LimitMoveLengthToOneValidatorTest" time="0.0"/>
  </testsuite>
  <testsuite name="hanto.teststudentthhughes.gamma.GammaHantoAcceptanceTest" time="0.001">
    <testcase name="bluePlacesButterflyFirst" classname="hanto.teststudentthhughes.gamma.GammaHantoAcceptanceTest" time="0.0"/>
    <testcase name="redSelfLoses" classname="hanto.teststudentthhughes.gamma.GammaHantoAcceptanceTest" time="0.0">
      <error>hanto.common.HantoException: Invalid Location Exception
	at hanto.studentthhughes.common.movevalidator.LocationValidator.invalidError(LocationValidator.java:76)
	at hanto.studentthhughes.common.movevalidator.AggrigateValidator.isValidMove(AggrigateValidator.java:41)
	at hanto.studentthhughes.gamma.GammaHantoGame.makeMove(GammaHantoGame.java:71)
	at hanto.teststudentthhughes.gamma.GammaHantoAcceptanceTest.makeMoves(GammaHantoAcceptanceTest.java:322)
	at hanto.teststudentthhughes.gamma.GammaHantoAcceptanceTest.redSelfLoses(GammaHantoAcceptanceTest.java:194)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:675)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)

</error>
    </testcase>
    <testcase name="tryToMoveWhenNotEnoughSpace" classname="hanto.teststudentthhughes.gamma.GammaHantoAcceptanceTest" time="0.0"/>
    <testcase name="tryToUseTooManyButterflies" classname="hanto.teststudentthhughes.gamma.GammaHantoAcceptanceTest" time="0.0"/>
    <testcase name="blueWins" classname="hanto.teststudentthhughes.gamma.GammaHantoAcceptanceTest" time="0.0">
      <error>hanto.common.HantoException: Invalid Location Exception
	at hanto.studentthhughes.common.movevalidator.LocationValidator.invalidError(LocationValidator.java:76)
	at hanto.studentthhughes.common.movevalidator.AggrigateValidator.isValidMove(AggrigateValidator.java:41)
	at hanto.studentthhughes.gamma.GammaHantoGame.makeMove(GammaHantoGame.java:71)
	at hanto.teststudentthhughes.gamma.GammaHantoAcceptanceTest.makeMoves(GammaHantoAcceptanceTest.java:322)
	at hanto.teststudentthhughes.gamma.GammaHantoAcceptanceTest.blueWins(GammaHantoAcceptanceTest.java:183)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:675)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)

</error>
    </testcase>
    <testcase name="butterflyNotPlacedByFourthMoveByFirstPlayer" classname="hanto.teststudentthhughes.gamma.GammaHantoAcceptanceTest" time="0.0"/>
    <testcase name="moveToDisconnectConfiguration" classname="hanto.teststudentthhughes.gamma.GammaHantoAcceptanceTest" time="0.0"/>
    <testcase name="moveFromEmptyHex" classname="hanto.teststudentthhughes.gamma.GammaHantoAcceptanceTest" time="0.0"/>
    <testcase name="moveSparrowToOccupiedHex" classname="hanto.teststudentthhughes.gamma.GammaHantoAcceptanceTest" time="0.0"/>
    <testcase name="tryToPlacePieceNextToOpponent" classname="hanto.teststudentthhughes.gamma.GammaHantoAcceptanceTest" time="0.0"/>
    <testcase name="blueMovesSparrow" classname="hanto.teststudentthhughes.gamma.GammaHantoAcceptanceTest" time="0.0">
      <error>hanto.common.HantoException: Invalid Location Exception
	at hanto.studentthhughes.common.movevalidator.LocationValidator.invalidError(LocationValidator.java:76)
	at hanto.studentthhughes.common.movevalidator.AggrigateValidator.isValidMove(AggrigateValidator.java:41)
	at hanto.studentthhughes.gamma.GammaHantoGame.makeMove(GammaHantoGame.java:71)
	at hanto.teststudentthhughes.gamma.GammaHantoAcceptanceTest.makeMoves(GammaHantoAcceptanceTest.java:322)
	at hanto.teststudentthhughes.gamma.GammaHantoAcceptanceTest.blueMovesSparrow(GammaHantoAcceptanceTest.java:95)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:675)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)

</error>
    </testcase>
    <testcase name="tryToMoveWrongColorPiece" classname="hanto.teststudentthhughes.gamma.GammaHantoAcceptanceTest" time="0.0"/>
    <testcase name="extraCreditMoveSparrowBeforeButterflyIsOnBoard" classname="hanto.teststudentthhughes.gamma.GammaHantoAcceptanceTest" time="0.0"/>
    <testcase name="butterflyNotPlacedByFourthMoveBySecondPlayer" classname="hanto.teststudentthhughes.gamma.GammaHantoAcceptanceTest" time="0.0"/>
    <testcase name="tryToMoveTooFar" classname="hanto.teststudentthhughes.gamma.GammaHantoAcceptanceTest" time="0.0"/>
    <testcase name="tryToMoveWrongPieceType" classname="hanto.teststudentthhughes.gamma.GammaHantoAcceptanceTest" time="0.0"/>
    <testcase name="tryToUseTooManySparrows" classname="hanto.teststudentthhughes.gamma.GammaHantoAcceptanceTest" time="0.0"/>
    <testcase name="moveButterflyToSameHex" classname="hanto.teststudentthhughes.gamma.GammaHantoAcceptanceTest" time="0.0"/>
    <testcase name="drawAfterTwentyTurns" classname="hanto.teststudentthhughes.gamma.GammaHantoAcceptanceTest" time="0.0">
      <error>hanto.common.HantoException: Invalid Location Exception
	at hanto.studentthhughes.common.movevalidator.LocationValidator.invalidError(LocationValidator.java:76)
	at hanto.studentthhughes.common.movevalidator.AggrigateValidator.isValidMove(AggrigateValidator.java:41)
	at hanto.studentthhughes.gamma.GammaHantoGame.makeMove(GammaHantoGame.java:71)
	at hanto.teststudentthhughes.gamma.GammaHantoAcceptanceTest.makeMoves(GammaHantoAcceptanceTest.java:322)
	at hanto.teststudentthhughes.gamma.GammaHantoAcceptanceTest.drawAfterTwentyTurns(GammaHantoAcceptanceTest.java:212)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:675)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)

</error>
    </testcase>
    <testcase name="tryToMoveAfterGameIsOver" classname="hanto.teststudentthhughes.gamma.GammaHantoAcceptanceTest" time="0.0"/>
    <testcase name="tryToUsePieceNotInGame" classname="hanto.teststudentthhughes.gamma.GammaHantoAcceptanceTest" time="0.0"/>
    <testcase name="redPlacesSparrowFirst" classname="hanto.teststudentthhughes.gamma.GammaHantoAcceptanceTest" time="0.0"/>
  </testsuite>
  <testsuite name="hanto.teststudentthhughes.common.MoveCounterTest" time="0.0">
    <testcase name="testIncrementing" classname="hanto.teststudentthhughes.common.MoveCounterTest" time="0.0"/>
    <testcase name="testInitialization" classname="hanto.teststudentthhughes.common.MoveCounterTest" time="0.0"/>
    <testcase name="testNotNull" classname="hanto.teststudentthhughes.common.MoveCounterTest" time="0.0"/>
  </testsuite>
  <testsuite name="hanto.teststudentthhughes.common.colormanager.ColorManagerTest" time="0.0">
    <testcase name="testToggleOnce" classname="hanto.teststudentthhughes.common.colormanager.ColorManagerTest" time="0.0"/>
    <testcase name="testToggleTwice" classname="hanto.teststudentthhughes.common.colormanager.ColorManagerTest" time="0.0"/>
    <testcase name="testGetter" classname="hanto.teststudentthhughes.common.colormanager.ColorManagerTest" time="0.0"/>
    <testcase name="testConstructor" classname="hanto.teststudentthhughes.common.colormanager.ColorManagerTest" time="0.0"/>
  </testsuite>
  <testsuite name="hanto.teststudentthhughes.common.movevalidator.ButterflyPlacedInTimeValidatorTest" time="0.001">
    <testcase name="testAddingButterflyInTime" classname="hanto.teststudentthhughes.common.movevalidator.ButterflyPlacedInTimeValidatorTest" time="0.0"/>
    <testcase name="testNotAddingButterflyWhenItsTheLastTurn" classname="hanto.teststudentthhughes.common.movevalidator.ButterflyPlacedInTimeValidatorTest" time="0.0"/>
    <testcase name="testInvalidError" classname="hanto.teststudentthhughes.common.movevalidator.ButterflyPlacedInTimeValidatorTest" time="0.0"/>
    <testcase name="testNotNull" classname="hanto.teststudentthhughes.common.movevalidator.ButterflyPlacedInTimeValidatorTest" time="0.0"/>
    <testcase name="testAddingPieceToThingThatAlreadyHasButterfly" classname="hanto.teststudentthhughes.common.movevalidator.ButterflyPlacedInTimeValidatorTest" time="0.001"/>
  </testsuite>
  <testsuite name="hanto.teststudentthhughes.common.boardvalidator.ColorWinValidatorTest" time="0.001">
    <testcase name="testConstructorNotNull" classname="hanto.teststudentthhughes.common.boardvalidator.ColorWinValidatorTest" time="0.0"/>
    <testcase name="testBoardWithOneButterflyAndNoSparrows" classname="hanto.teststudentthhughes.common.boardvalidator.ColorWinValidatorTest" time="0.0"/>
    <testcase name="testBoardWIthNoButterfly" classname="hanto.teststudentthhughes.common.boardvalidator.ColorWinValidatorTest" time="0.0"/>
    <testcase name="testBoardWithOneButterflyAndSurrounded" classname="hanto.teststudentthhughes.common.boardvalidator.ColorWinValidatorTest" time="0.0"/>
    <testcase name="testBoardWithOneButterflyAndSurroundedWithBothTeamsPieces" classname="hanto.teststudentthhughes.common.boardvalidator.ColorWinValidatorTest" time="0.001"/>
  </testsuite>
  <testsuite name="hanto.teststudentthhughes.common.boardvalidator.TerminalMoveCheckTest" time="0.001">
    <testcase name="testTerminalMovesReturnsDrawWhenTerminalMoves" classname="hanto.teststudentthhughes.common.boardvalidator.TerminalMoveCheckTest" time="0.0"/>
    <testcase name="testTerminalMovesReturnsOKWhenNotTerminalMoves" classname="hanto.teststudentthhughes.common.boardvalidator.TerminalMoveCheckTest" time="0.0"/>
    <testcase name="testNotNull" classname="hanto.teststudentthhughes.common.boardvalidator.TerminalMoveCheckTest" time="0.0"/>
  </testsuite>
  <testsuite name="hanto.teststudentthhughes.common.hantopiece.HantoPieceImplTest" time="0.0">
    <testcase name="testSetters" classname="hanto.teststudentthhughes.common.hantopiece.HantoPieceImplTest" time="0.0"/>
  </testsuite>
  <testsuite name="hanto.teststudentthhughes.common.movecalculator.NMoveTest" time="0.002">
    <testcase name="sampleSinglePointInList" classname="hanto.teststudentthhughes.common.movecalculator.NMoveTest" time="0.001"/>
    <testcase name="sampleSinglePointNotInList" classname="hanto.teststudentthhughes.common.movecalculator.NMoveTest" time="0.0"/>
    <testcase name="samplePointNotNMoveCalculatorOfTwo" classname="hanto.teststudentthhughes.common.movecalculator.NMoveTest" time="0.0"/>
    <testcase name="samplePointInNMoveCalculatorOfTwo" classname="hanto.teststudentthhughes.common.movecalculator.NMoveTest" time="0.001"/>
    <testcase name="testSixResponsesFromNMoveCalculatorOfOne" classname="hanto.teststudentthhughes.common.movecalculator.NMoveTest" time="0.0"/>
    <testcase name="testEighteenPointsInNMoveCalculatorOfTwo" classname="hanto.teststudentthhughes.common.movecalculator.NMoveTest" time="0.0"/>
    <testcase name="testNotNull" classname="hanto.teststudentthhughes.common.movecalculator.NMoveTest" time="0.0"/>
  </testsuite>
  <testsuite name="hanto.teststudentthhughes.common.movevalidator.MoveRealPieceValidatorTester" time="0.001">
    <testcase name="testMovingAPieceThatDoesntExist" classname="hanto.teststudentthhughes.common.movevalidator.MoveRealPieceValidatorTester" time="0.0"/>
    <testcase name="testMovingAPieceThatIsLocatedInAnOccupiedPlace" classname="hanto.teststudentthhughes.common.movevalidator.MoveRealPieceValidatorTester" time="0.0"/>
    <testcase name="testPlacingAPiece" classname="hanto.teststudentthhughes.common.movevalidator.MoveRealPieceValidatorTester" time="0.0"/>
    <testcase name="testInvalidError" classname="hanto.teststudentthhughes.common.movevalidator.MoveRealPieceValidatorTester" time="0.0"/>
    <testcase name="testNotNull" classname="hanto.teststudentthhughes.common.movevalidator.MoveRealPieceValidatorTester" time="0.001"/>
    <testcase name="testMovingAPieceThatIsntTheTypeAtAnOccupiedLocation" classname="hanto.teststudentthhughes.common.movevalidator.MoveRealPieceValidatorTester" time="0.0"/>
  </testsuite>
  <testsuite name="hanto.teststudentthhughes.common.movevalidator.ButterflyCheckerTest" time="0.0">
    <testcase name="testPlaceSecondButterfly" classname="hanto.teststudentthhughes.common.movevalidator.ButterflyCheckerTest" time="0.0"/>
    <testcase name="testPlaceSparrow" classname="hanto.teststudentthhughes.common.movevalidator.ButterflyCheckerTest" time="0.0"/>
    <testcase name="testInvalidError" classname="hanto.teststudentthhughes.common.movevalidator.ButterflyCheckerTest" time="0.0"/>
    <testcase name="testMovePiece" classname="hanto.teststudentthhughes.common.movevalidator.ButterflyCheckerTest" time="0.0"/>
    <testcase name="testNotNull" classname="hanto.teststudentthhughes.common.movevalidator.ButterflyCheckerTest" time="0.0"/>
  </testsuite>
  <testsuite name="hanto.teststudentthhughes.common.movevalidator.PlayingTooManyPieceValidatorTest" time="0.001">
    <testcase name="testAddingEnoughPieceToEmptyBoardToError" classname="hanto.teststudentthhughes.common.movevalidator.PlayingTooManyPieceValidatorTest" time="0.0"/>
    <testcase name="testMovingAPiece" classname="hanto.teststudentthhughes.common.movevalidator.PlayingTooManyPieceValidatorTest" time="0.001"/>
    <testcase name="testAddingOnePieceToEmptyBoard" classname="hanto.teststudentthhughes.common.movevalidator.PlayingTooManyPieceValidatorTest" time="0.0"/>
    <testcase name="testInvalidError" classname="hanto.teststudentthhughes.common.movevalidator.PlayingTooManyPieceValidatorTest" time="0.0"/>
  </testsuite>
  <testsuite name="hanto.teststudentthhughes.common.board.BoardImplTest" time="0.002">
    <testcase name="testRemovingFromEmptyBoardWithNullAsLocation" classname="hanto.teststudentthhughes.common.board.BoardImplTest" time="0.0"/>
    <testcase name="testCopyConstructor" classname="hanto.teststudentthhughes.common.board.BoardImplTest" time="0.0"/>
    <testcase name="boardIsEmptyAndLocationsFree" classname="hanto.teststudentthhughes.common.board.BoardImplTest" time="0.0"/>
    <testcase name="removePieceThatsNotOnBoard" classname="hanto.teststudentthhughes.common.board.BoardImplTest" time="0.0"/>
    <testcase name="canGetSomethingFromBoard" classname="hanto.teststudentthhughes.common.board.BoardImplTest" time="0.0"/>
    <testcase name="testCorrectlyAddingSomethingToBoard" classname="hanto.teststudentthhughes.common.board.BoardImplTest" time="0.001"/>
    <testcase name="canGetSomethingFromEmptyBoard" classname="hanto.teststudentthhughes.common.board.BoardImplTest" time="0.0"/>
    <testcase name="removePieceFromBoard" classname="hanto.teststudentthhughes.common.board.BoardImplTest" time="0.0"/>
    <testcase name="testValidDestinationNullPiece" classname="hanto.teststudentthhughes.common.board.BoardImplTest" time="0.0"/>
    <testcase name="testRemovingFromEmptyBoard" classname="hanto.teststudentthhughes.common.board.BoardImplTest" time="0.0"/>
    <testcase name="boardIsNotEmptyAndEmptyLocationIsQueried" classname="hanto.teststudentthhughes.common.board.BoardImplTest" time="0.0"/>
    <testcase name="canAddSomethingToFilledSPot" classname="hanto.teststudentthhughes.common.board.BoardImplTest" time="0.0"/>
    <testcase name="boardIsNotEmptyAndOccupiedLocationIsQueried" classname="hanto.teststudentthhughes.common.board.BoardImplTest" time="0.0"/>
    <testcase name="testNullPlaceDestination" classname="hanto.teststudentthhughes.common.board.BoardImplTest" time="0.0"/>
    <testcase name="testConstructor" classname="hanto.teststudentthhughes.common.board.BoardImplTest" time="0.001"/>
  </testsuite>
  <testsuite name="hanto.teststudentthhughes.common.movevalidator.PieceValidatorTest" time="0.0">
    <testcase name="testValidatorWithItemsInListAndINValidMove" classname="hanto.teststudentthhughes.common.movevalidator.PieceValidatorTest" time="0.0"/>
    <testcase name="testValidatorWithItemsInListAndValidMove" classname="hanto.teststudentthhughes.common.movevalidator.PieceValidatorTest" time="0.0"/>
    <testcase name="testValidatorWithNoArgs" classname="hanto.teststudentthhughes.common.movevalidator.PieceValidatorTest" time="0.0"/>
    <testcase name="testValidatorWithEmptyList" classname="hanto.teststudentthhughes.common.movevalidator.PieceValidatorTest" time="0.0"/>
    <testcase name="testFailureMessage" classname="hanto.teststudentthhughes.common.movevalidator.PieceValidatorTest" time="0.0"/>
  </testsuite>
  <testsuite name="hanto.teststudentthhughes.gamma.GammaHantoTest" time="0.005">
    <testcase name="redAndBlueWinResultingInDraw" classname="hanto.teststudentthhughes.gamma.GammaHantoTest" time="0.001">
      <error>hanto.common.HantoException: Invalid Location Exception
	at hanto.studentthhughes.common.movevalidator.LocationValidator.invalidError(LocationValidator.java:76)
	at hanto.studentthhughes.common.movevalidator.AggrigateValidator.isValidMove(AggrigateValidator.java:41)
	at hanto.studentthhughes.gamma.GammaHantoGame.makeMove(GammaHantoGame.java:71)
	at hanto.teststudentthhughes.gamma.GammaHantoTest.redAndBlueWinResultingInDraw(GammaHantoTest.java:280)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:675)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)

</error>
    </testcase>
    <testcase name="testPassingNullTo" classname="hanto.teststudentthhughes.gamma.GammaHantoTest" time="0.0"/>
    <testcase name="movePieceThatDoesntExistEGWrongLocation" classname="hanto.teststudentthhughes.gamma.GammaHantoTest" time="0.0"/>
    <testcase name="testGameLimitationAfterTwentyMoves" classname="hanto.teststudentthhughes.gamma.GammaHantoTest" time="0.0">
      <error>hanto.common.HantoException: Invalid Location Exception
	at hanto.studentthhughes.common.movevalidator.LocationValidator.invalidError(LocationValidator.java:76)
	at hanto.studentthhughes.common.movevalidator.AggrigateValidator.isValidMove(AggrigateValidator.java:41)
	at hanto.studentthhughes.gamma.GammaHantoGame.makeMove(GammaHantoGame.java:71)
	at hanto.teststudentthhughes.gamma.GammaHantoTest.testGameLimitationAfterTwentyMoves(GammaHantoTest.java:218)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:675)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)

</error>
    </testcase>
    <testcase name="testGameOver" classname="hanto.teststudentthhughes.gamma.GammaHantoTest" time="0.001"/>
    <testcase name="testMovingMostlyNotSurroundedPiece" classname="hanto.teststudentthhughes.gamma.GammaHantoTest" time="0.0">
      <error>hanto.common.HantoException: Invalid Location Exception
	at hanto.studentthhughes.common.movevalidator.LocationValidator.invalidError(LocationValidator.java:76)
	at hanto.studentthhughes.common.movevalidator.AggrigateValidator.isValidMove(AggrigateValidator.java:41)
	at hanto.studentthhughes.gamma.GammaHantoGame.makeMove(GammaHantoGame.java:71)
	at hanto.teststudentthhughes.gamma.GammaHantoTest.testMovingMostlyNotSurroundedPiece(GammaHantoTest.java:135)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:675)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)

</error>
    </testcase>
    <testcase name="testPlayingIllegalItem" classname="hanto.teststudentthhughes.gamma.GammaHantoTest" time="0.0"/>
    <testcase name="moveButterflyOnSecondTurnRedToDisjointPlace" classname="hanto.teststudentthhughes.gamma.GammaHantoTest" time="0.0"/>
    <testcase name="testAddingTooManyPieces" classname="hanto.teststudentthhughes.gamma.GammaHantoTest" time="0.0"/>
    <testcase name="placingThreePiecesOnTheBoardInCorrectlyBasedOffTheirColors" classname="hanto.teststudentthhughes.gamma.GammaHantoTest" time="0.0"/>
    <testcase name="testPlacingPieceOnInvalidTileFirstTime" classname="hanto.teststudentthhughes.gamma.GammaHantoTest" time="0.001"/>
    <testcase name="testMovingMostlySurroundedPiece" classname="hanto.teststudentthhughes.gamma.GammaHantoTest" time="0.0"/>
    <testcase name="testnotPlayingButterflyRightAway" classname="hanto.teststudentthhughes.gamma.GammaHantoTest" time="0.0"/>
    <testcase name="makeSingleMoveCorrectly" classname="hanto.teststudentthhughes.gamma.GammaHantoTest" time="0.0"/>
    <testcase name="moveButterflyOnSecondTurnRedLegalPlaceThatsTooFarAway" classname="hanto.teststudentthhughes.gamma.GammaHantoTest" time="0.0"/>
    <testcase name="placingThreePiecesOnTheBoardCorrectly" classname="hanto.teststudentthhughes.gamma.GammaHantoTest" time="0.001">
      <error>hanto.common.HantoException: Invalid Location Exception
	at hanto.studentthhughes.common.movevalidator.LocationValidator.invalidError(LocationValidator.java:76)
	at hanto.studentthhughes.common.movevalidator.AggrigateValidator.isValidMove(AggrigateValidator.java:41)
	at hanto.studentthhughes.gamma.GammaHantoGame.makeMove(GammaHantoGame.java:71)
	at hanto.teststudentthhughes.gamma.GammaHantoTest.placingThreePiecesOnTheBoardCorrectly(GammaHantoTest.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:675)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)

</error>
    </testcase>
    <testcase name="testThatRedCanWin" classname="hanto.teststudentthhughes.gamma.GammaHantoTest" time="0.0">
      <error>hanto.common.HantoException: Invalid Location Exception
	at hanto.studentthhughes.common.movevalidator.LocationValidator.invalidError(LocationValidator.java:76)
	at hanto.studentthhughes.common.movevalidator.AggrigateValidator.isValidMove(AggrigateValidator.java:41)
	at hanto.studentthhughes.gamma.GammaHantoGame.makeMove(GammaHantoGame.java:71)
	at hanto.teststudentthhughes.gamma.GammaHantoTest.testThatRedCanWin(GammaHantoTest.java:264)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:675)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)

</error>
    </testcase>
    <testcase name="movePieceThatDoesntExistEGWrongPiece" classname="hanto.teststudentthhughes.gamma.GammaHantoTest" time="0.0"/>
    <testcase name="testNotNull" classname="hanto.teststudentthhughes.gamma.GammaHantoTest" time="0.0"/>
    <testcase name="moveButterflyOnSecondRedTurn" classname="hanto.teststudentthhughes.gamma.GammaHantoTest" time="0.0">
      <error>hanto.common.HantoException: Invalid Location Exception
	at hanto.studentthhughes.common.movevalidator.LocationValidator.invalidError(LocationValidator.java:76)
	at hanto.studentthhughes.common.movevalidator.AggrigateValidator.isValidMove(AggrigateValidator.java:41)
	at hanto.studentthhughes.gamma.GammaHantoGame.makeMove(GammaHantoGame.java:71)
	at hanto.teststudentthhughes.gamma.GammaHantoTest.moveButterflyOnSecondRedTurn(GammaHantoTest.java:81)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:675)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)

</error>
    </testcase>
  </testsuite>
  <testsuite name="hanto.teststudentthhughes.alpha.AlphaHantoTest" time="0.002">
    <testcase name="redTriesToPlaceCrab" classname="hanto.teststudentthhughes.alpha.AlphaHantoTest" time="0.001"/>
    <testcase name="blueMovesToNonOrigin" classname="hanto.teststudentthhughes.alpha.AlphaHantoTest" time="0.0"/>
    <testcase name="redPlacesButterflyAtOrigin" classname="hanto.teststudentthhughes.alpha.AlphaHantoTest" time="0.0"/>
    <testcase name="blueButterflyIsAtOrginAfterMove" classname="hanto.teststudentthhughes.alpha.AlphaHantoTest" time="0.0"/>
    <testcase name="blueMakesValidFirstMove" classname="hanto.teststudentthhughes.alpha.AlphaHantoTest" time="0.0"/>
    <testcase name="attemptToMoveAfterGameEnds" classname="hanto.teststudentthhughes.alpha.AlphaHantoTest" time="0.0"/>
    <testcase name="redMakesValidMove" classname="hanto.teststudentthhughes.alpha.AlphaHantoTest" time="0.0"/>
    <testcase name="blueTriesToPlaceSparrow" classname="hanto.teststudentthhughes.alpha.AlphaHantoTest" time="0.0"/>
    <testcase name="redPlacesButterflyAtInvalidLocation" classname="hanto.teststudentthhughes.alpha.AlphaHantoTest" time="0.0"/>
    <testcase name="redButterflyIsAtCorrectPlaceAfterRedMoves" classname="hanto.teststudentthhughes.alpha.AlphaHantoTest" time="0.001"/>
  </testsuite>
  <testsuite name="hanto.teststudentthhughes.common.coordinate.HantoCoordinateImplTest" time="0.0">
    <testcase name="testCopyConstructor" classname="hanto.teststudentthhughes.common.coordinate.HantoCoordinateImplTest" time="0.0"/>
    <testcase name="testGetters" classname="hanto.teststudentthhughes.common.coordinate.HantoCoordinateImplTest" time="0.0"/>
    <testcase name="testGetNeighbors" classname="hanto.teststudentthhughes.common.coordinate.HantoCoordinateImplTest" time="0.0"/>
    <testcase name="testConstructor" classname="hanto.teststudentthhughes.common.coordinate.HantoCoordinateImplTest" time="0.0"/>
    <testcase name="testCopyConstructorSetters" classname="hanto.teststudentthhughes.common.coordinate.HantoCoordinateImplTest" time="0.0"/>
  </testsuite>
  <testsuite name="hanto.teststudentthhughes.common.boardvalidator.AggragateBoardValidatorTest" time="0.001">
    <testcase name="getDRAWWithRWandDRAWValidator" classname="hanto.teststudentthhughes.common.boardvalidator.AggragateBoardValidatorTest" time="0.0"/>
    <testcase name="getBWWithBWValidator" classname="hanto.teststudentthhughes.common.boardvalidator.AggragateBoardValidatorTest" time="0.0"/>
    <testcase name="getOKWithNoValidators" classname="hanto.teststudentthhughes.common.boardvalidator.AggragateBoardValidatorTest" time="0.0"/>
    <testcase name="getRWWithRWValidator" classname="hanto.teststudentthhughes.common.boardvalidator.AggragateBoardValidatorTest" time="0.001"/>
    <testcase name="getDRAWWithBWandDRAWValidator" classname="hanto.teststudentthhughes.common.boardvalidator.AggragateBoardValidatorTest" time="0.0"/>
    <testcase name="getDRAWWithBWandRWValidator" classname="hanto.teststudentthhughes.common.boardvalidator.AggragateBoardValidatorTest" time="0.0"/>
    <testcase name="getDRAWWithDRAWValidator" classname="hanto.teststudentthhughes.common.boardvalidator.AggragateBoardValidatorTest" time="0.0"/>
  </testsuite>
</testrun>
