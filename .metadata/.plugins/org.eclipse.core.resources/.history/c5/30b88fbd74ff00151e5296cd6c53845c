package hanto.Test.studentThhughes.common.moveCalculator;

import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertTrue;

import java.util.LinkedList;
import java.util.Queue;

import org.junit.Test;

import hanto.common.HantoCoordinate;
import hanto.studentThhughes.common.coordinate.HantoCoordinateImpl;
import hanto.studentThhughes.common.moveCalculator.MoveCalculator;
import hanto.studentThhughes.common.moveCalculator.SingleMoveCalculator;

public class NMoveTest {
	
	MoveCalculator mc;
	
	@Test
	public void testNotNull()
	{
		assertNotNull(new NMoveCalculator(1));
	}
	
	
	@Test
	public void testSixResponsesFromNMoveCalculatorOfOne()
	{
		mc = new NMoveCalculator(1)
		Queue<HantoCoordinate> coordinateList = mc.calcMoveCoordinates(new HantoCoordinateImpl(0,0));
		assertTrue(6 == coordinateList.size()); 
	}
	
	@Test
	public void sampleSinglePointInList()
	{
//		Queue<HantoCoordinate> coordinateList = 
//				(new SingleMoveCalculator()).calcMoveCoordinates(new HantoCoordinateImpl(0,0));
//		Queue<HantoCoordinateImpl> implList = new LinkedList<HantoCoordinateImpl>();
//		for (HantoCoordinate hc: coordinateList){
//			implList.add(new HantoCoordinateImpl(hc));
//		}
//		HantoCoordinateImpl tester = new HantoCoordinateImpl(0,1);
//		assertTrue(implList.contains(tester)); 
	}

}
