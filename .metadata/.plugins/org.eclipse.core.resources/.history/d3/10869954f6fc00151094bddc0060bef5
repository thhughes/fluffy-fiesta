package hanto.studentThhughes.common.moveValidator;

import hanto.common.HantoCoordinate;
import hanto.common.HantoException;
import hanto.common.HantoPiece;
import hanto.common.HantoPieceType;
import hanto.studentThhughes.common.MoveCounter;
import hanto.studentThhughes.common.board.Board;
import hanto.studentThhughes.common.frontier.Frontier;

public class ButterflyPlacedInTimeValidator implements MoveValidator{
	Integer numberOfTurns;
	public ButterflyPlacedInTimeValidator(int numberOfTurns){
		numberOfTurns = new Integer(numberOfTurns);
	}
	
	
	@Override
	public boolean isValidMove(Board theBoard, Frontier theFrontier, HantoPiece piece, HantoCoordinate where,
			MoveCounter counter) {
		
		
		
		boolean fourthTurnButterfly = !(numberButterflies == 0 &&
				piece.getType() != HantoPieceType.BUTTERFLY && 
				counter.getNumberMoves(piece.getColor()) < 3);
		return false;
	}

	@Override
	public void invalidError() throws HantoException {
		throw new HantoException("Butterfly Placing Error: Must place butterfly by "+numberOfTurns.toString()+" Turns");
		
	}

}
