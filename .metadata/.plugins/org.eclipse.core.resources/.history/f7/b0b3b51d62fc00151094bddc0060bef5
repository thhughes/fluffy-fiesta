/**
 * 
 */
package hanto.studentThhughes.common.moveValidator;

import java.util.LinkedList;
import java.util.Queue;

import hanto.common.HantoCoordinate;
import hanto.common.HantoPiece;
import hanto.common.HantoPieceType;
import hanto.studentThhughes.common.board.Board;
import hanto.studentThhughes.common.frontier.Frontier;

/**
 * @author Troy
 *
 */
public class PieceValidator implements MoveValidator {

	Queue<HantoPieceType> validList;
	
	
	public PieceValidator(){
		validList = new LinkedList<HantoPieceType>();
	}
	
	public PieceValidator(Queue<HantoPieceType> inputList){
		validList = inputList;
	}
	
	
	/* (non-Javadoc)
	 * @see hanto.studentThhughes.common.moveValidator.MoveValidator#isValidMove(hanto.studentThhughes.common.board.Board, hanto.studentThhughes.common.frontier.Frontier, hanto.common.HantoPiece, hanto.common.HantoCoordinate)
	 */
	@Override
	public boolean isValidMove(Board theBoard, Frontier theFrontier, HantoPiece piece, HantoCoordinate where) {
//		boolean Result = true;
//		if(validList.isEmpty()){
//			Result = false;
//		}else{
//			Result = validList.contains(piece.getType());
//		}
//		return Result;
		return validList.contains(piece.getType());
	}

}
