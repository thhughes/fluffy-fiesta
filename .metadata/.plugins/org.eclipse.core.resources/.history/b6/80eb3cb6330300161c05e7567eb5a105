package hanto.teststudentthhughes.common.turnactionvalidator.moveandplacecheckers;

import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.util.LinkedList;
import java.util.Queue;

import org.junit.Before;
import org.junit.Test;
import static hanto.common.HantoPieceType.*;
import static hanto.common.HantoPlayerColor.*;

import hanto.common.HantoException;
import hanto.common.HantoPiece;
import hanto.common.HantoPieceType;
import hanto.common.HantoPlayerColor;
import hanto.studentthhughes.common.coordinate.HantoCoordinateImpl;
import hanto.studentthhughes.common.hantoboardandboardtools.HantoBoard;
import hanto.studentthhughes.common.hantoboardandboardtools.HantoBoardImpl;
import hanto.studentthhughes.common.hantopiece.HantoPieceImpl;
import hanto.studentthhughes.common.movecounter.MoveCounterImpl;
import hanto.studentthhughes.common.turnactionvalidator.TurnActionValidator;
import hanto.studentthhughes.common.turnactionvalidator.moveandplacechecks.GeneralActionValidator;
import hanto.studentthhughes.common.turnactionvalidator.movecheckers.MoveIsContiguousValidator;

public class GeneralActionValidatorTest {

	
	HantoBoard theBoard;
	TurnActionValidator tav;
	HantoPiece hpt1;
	HantoPiece hpt2;
	Queue<HantoPieceType> validPieces;
	
	@Before
	public void setup() throws HantoException{
		validPieces = new LinkedList<HantoPieceType>();
		validPieces.add(BUTTERFLY);
		validPieces.add(SPARROW);
		validPieces.add(CRAB);
		
		hpt1 = new HantoPieceImpl(BLUE,BUTTERFLY);
		hpt2 = new HantoPieceImpl(RED,BUTTERFLY);
		theBoard = new HantoBoardImpl();
		theBoard.placeOnBoard(hpt1, new HantoCoordinateImpl(0,0));
		theBoard.placeOnBoard(hpt2, new HantoCoordinateImpl(0,1));
		
		tav = new GeneralActionValidator(validPieces);
	}
	
	
	
	@Test(expected=HantoException.class)
	public void testInvalidErrorException() throws HantoException{
		tav.invalidError();
	}
	
}
